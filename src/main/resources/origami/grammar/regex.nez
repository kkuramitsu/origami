/*

  Nez Regex Grammar

  Author:
    Shun Honda (https://github.com/shun-honda)
		Masanori Sato (https://github.com/masanori-10)

*/

File
	= Chunk .*

Chunk
	= Pattern

Pattern
	= { @Expr #Pattern }

Expr
	= Concatenation {@ ('|' @Concatenation) #Or }*

Concatenation
	= IndependentExpr {@ (@IndependentExpr) #Concatenation }* {@ '$' #EndOfString }?

IndependentExpr
	= { '(?>' @Concatenation ')' #IndependentExpr }
	/ Predicate

Predicate
	= { '(' ('?=' #And / '?!' #Not) @Concatenation ')' }
	/ PositionAnchor

PositionAnchor
	= { '^' @Concatenation #StartOfString }
	/ SuffixTerminal

SuffixTerminal
	= Terminal {@ addQuantifiers }?

addQuantifiers
	= '*+' #PossessiveRepetition
	/ '*?' #LazyQuantifiers
	/ '*' #Repetition
	/ '+' #OneMoreRepetition
	/ '?' #Option
	/ '{' @{ INT #Min } '}' #NTimesRepetition
	/ '{' @{ INT #Min } ',}' #NMoreRepetition
	/ '{' @{ INT #Min } ',' @{ INT #Max } '}' #NtoMTimesRepetition

INT
	= [1-9] [0-9]* / '0'

Terminal
	= CharacterSet
	/ { '.' #Any }
	/ '(' { @Expr #Capture } ')'
	/ Character

CharacterSet
	= '[^' { @CharacterRange (@CharacterRange)* #NegativeCharacterSet} ']'
	/'[' !'^' CharacterRange {@ (@CharacterRange)+ #CharacterSet}? ']'

CharacterRange
	= CharacterSetItem {@ '-' @CharacterSetItem #CharacterRange }?

CharacterSetItem
	= { CHARACTER_SET_ITEM #Character }

CHARACTER_SET_ITEM
	= '\\u' HEX HEX HEX HEX
	/ '\\n'
	/ '\\t'
	/ '\\\\'
	/ '\\r'
	/ '\\f'
	/ '\\['
	/ '\\]'
	/ '\\-'
	/ !('-'/'['/']') .

HEX
	= [0-9A-Fa-f]

Character
	= { CHARACTER #Character }

CHARACTER
	= '\\u' HEX HEX HEX HEX
	/ '\\n'
	/ '\\t'
	/ '\\\\'
	/ '\\r'
	/ '\\f'
	/ '\\' METACHARACTER
	/ !METACHARACTER !'\n' .

METACHARACTER
	= '+' / '*' / '?' / '.' / '^' / '$' / '|' / '/'
	/ '(' / ')' / '[' / ']' / '{' / '}' / '-'
